<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">

    <bean id="redisPool" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="${redis.maxTotal}"/>
        <property name="maxIdle" value="${redis.maxIdle}"/>
        <property name="testOnBorrow" value="${redis.testOnBorrow}"/>
    </bean>

    <bean id="redisFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <!--
        <property name="hostName" value="${redis.host}"/>
        <property name="port" value="${redis.port}"/>
        <property name="usePool" value="${redis.usePool}"/>
        <property name="poolConfig" ref="redisPool"/>
        -->
        <constructor-arg name="sentinelConfig" ref="redisSentinelConfiguration"/>
        <constructor-arg name="poolConfig" ref="redisPool"/>
    </bean>

    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="redisFactory"/>

        <property name="defaultSerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
        </property>

        <property name="keySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
        </property>
        <property name="valueSerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
        </property>
        <property name="hashKeySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
        </property>
        <property name="hashValueSerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
        </property>
    </bean>

    <bean id="redisGzipTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="redisFactory"/>

        <property name="defaultSerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
        </property>

        <property name="keySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
        </property>
    </bean>

    <!-- redis集群配置 哨兵模式 -->
    <bean id="redisSentinelConfiguration" class="org.springframework.data.redis.connection.RedisSentinelConfiguration">
        <property name="master">
            <bean class="org.springframework.data.redis.connection.RedisNode">
                <!--这个值要和Sentinel中指定的master的值一致，不然启动时找不到Sentinel会报错的-->
                <property name="name" value="${sentinels.redis.masterName}" />
            </bean>
        </property>
        <!--记住了,这里是指定Sentinel的IP和端口，不是Master和Slave的-->
        <property name="sentinels">
            <set>
                <bean class="org.springframework.data.redis.connection.RedisNode">
                    <constructor-arg name="host" value="${sentinels1.redis.host}"/>
                    <constructor-arg name="port" value="${sentinels1.redis.port}"/>
                </bean>
                <bean class="org.springframework.data.redis.connection.RedisNode">
                    <constructor-arg name="host" value="${sentinels2.redis.host}"/>
                    <constructor-arg name="port" value="${sentinels2.redis.port}"/>
                </bean>
                <bean class="org.springframework.data.redis.connection.RedisNode ">
                    <constructor-arg name="host" value="${sentinels3.redis.host}"/>
                    <constructor-arg name="port" value="${sentinels3.redis.port}"/>
                </bean>
            </set>
        </property>
    </bean>


    <!-- jedis -->
    <!--<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">-->
        <!--<property name="maxTotal" value="${redis.maxTotal}"/>-->
        <!--<property name="maxIdle" value="${redis.maxIdle}"/>-->
        <!--<property name="testOnBorrow" value="${redis.testOnBorrow}"/>-->
        <!--<property name="jmxNamePrefix" value="JedisPool"/>-->
    <!--</bean>-->
    <!--<bean id="jedisSentinelPool" class="redis.clients.jedis.JedisSentinelPool">-->
        <!--<constructor-arg index="0" value="${sentinels.redis.masterName}" />-->
        <!--<constructor-arg index="1">-->
            <!--<set>-->
                <!--<value>${sentinels1.redis.host}:${sentinels1.redis.port}</value>-->
                <!--<value>${sentinels2.redis.host}:${sentinels2.redis.port}</value>-->
                <!--<value>${sentinels3.redis.host}:${sentinels3.redis.port}</value>-->
            <!--</set>-->
        <!--</constructor-arg>-->
        <!--<constructor-arg index="2" ref="poolConfig" />-->
    <!--</bean>-->
    <!--<bean id="jedisTemplate" class="com.tiefan.btc.fss.utils.redis.JedisTemplate">-->
        <!--<constructor-arg index="0" ref="jedisSentinelPool"/>-->
    <!--</bean>-->

</beans>